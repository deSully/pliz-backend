version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d:rw
      - ./html:/usr/share/nginx/html:rw   # webroot partagé pour ACME
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - webproxy
    restart: always

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    environment:
      DEFAULT_EMAIL: contact@barakasn.com
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d:rw
      - ./html:/usr/share/nginx/html:rw   # webroot partagé pour le challenge
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme:/etc/acme.sh               # persistance des certificats ACME
    networks:
      - webproxy
    restart: always

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    env_file:
      - .env
    networks:
      - webproxy
    restart: always

  web:
    build: .
    command: >
      sh -c "
        python manage.py migrate && \
        python manage.py collectstatic --noinput && \
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./html:/usr/share/nginx/html:rw   # IMPORTANT pour que ACME challenge fonctionne
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT}/${POSTGRES_DB}
      - VIRTUAL_HOST=core.plizmoney.com
      - LETSENCRYPT_HOST=core.plizmoney.com
      - LETSENCRYPT_EMAIL=it@plizmoney.com
    networks:
      - webproxy
    restart: always
    depends_on:
      - db

volumes:
  postgres_data:

networks:
  webproxy:
    driver: bridge
